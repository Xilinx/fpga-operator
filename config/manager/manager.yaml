#
# Copyright (C) 2023, Advanced Micro Devices, Inc. - All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: fpga-operator
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fpga-operator
  namespace: system
  labels:
    app: fpga-operator
spec:
  selector:
    matchLabels:
      app: fpga-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: fpga-operator
      labels:
        app: fpga-operator
    spec:
      imagePullSecrets:
      - name: xilinxatg-dockerhub
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /fpga-operator
        args:
        - --leader-elect
        image: fpga-operator:latest
        imagePullPolicy: IfNotPresent
        name: fpga-operator
        securityContext:
          allowPrivilegeEscalation: false
        # TODO(user): uncomment for common cases that do not require escalating privileges
        # capabilities:
        #   drop:
        #     - "ALL"
        env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: fpga-operator
      terminationGracePeriodSeconds: 10
